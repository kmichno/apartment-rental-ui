# List of endpoints - backend

##########################
#       Apartments       #
##########################

# Show all apartments with parameters (sort recently added)
GET  http://localhost:8080/apartments/show/all

# Show all apartments with limit results (parameters: @start is offset, @end limit results), sort recently added 
GET  http://localhost:8080/apartments/show/all/@start/@end

# Show information about single apartament (using @id)
GET http://localhost:8080/apartments/@id

# Add apartment (parameters: "name", "description", "city", "street", "code", "people", "price")
POST http://localhost:8080/apartments/add

# Upload photo for apartment (parameters: "id" - apartament id, "image" - file)
POST http://localhost:8080/apartments/upload-photo

# Set default image for apartment (paramaters: "ID_IMAGE" - id default image, "ID_APARTMENT" - id apartment)
PUT http://localhost:8080/apartments/set/image/@ID_IMAGE/id/@ID_APARTMENT


##########################
#        Bookings        #
##########################

# Check the availability of the booking of the selected apartment (parameters: @id apartment, @date_start rental start date, @date_end rental end date)
GET http://localhost:8080/bookings/check-status/apartment/@id/from/@date_start/to/@date_end

# Check the availability of the booking of the selected apartment (parameters: @id apartment, @date_start rental start date, @date_end rental end date)
GET http://localhost:8080/bookings/show/all

# Add reservation (parameters: "idApartment", "idUser", "start", "end"), format date(start, end): YYYY-MM-DD
POST http://localhost:8080/bookings/add

# Booking confirm (parameters @id - id apartment)
PUT http://localhost:8080/bookings/change/@id/confirm

# Booking cancel (parameters @id - id apartment)
PUT http://localhost:8080/bookings/change/@id/cancel

# Booking delete (parameters @id - id apartment)
DELETE http://localhost:8080/bookings/change/@id/delete

# Show bookings for USER (parameter @id)
# TODO
#GET http://localhost:8080/bookings/show/user/@id
#

##########################
#        Users           #
##########################

# Login user
GET http://localhost:8080/authorization/login

# Logout user
GET http://localhost:8080/authorization/logout

# Check if the user is logged in (result "true" or "false")
GET http://localhost:8080/authorization/check

# Show details about user if is logged (name, id)
GET http://localhost:8080/authorization/details

# Set admin permission (parameters @id is user id)
PUT http://localhost:8080/authorization/admin-permission/set/user/@id

# Unset admin permission (parameters @id is user id)
PUT http://localhost:8080/authorization/admin-permission/unset/user/@id
